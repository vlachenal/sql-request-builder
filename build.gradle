/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
plugins {
  id 'java-library'
  id 'eclipse'
  id 'maven-publish'
  id 'signing'
  id 'jacoco'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

allprojects {
  eclipse.project {
    natures 'org.eclipse.buildship.core.gradleprojectnature'
  }
}

// In this section you declare where to find the dependencies of your project
repositories {
  // Use jcenter for resolving your dependencies.
  // You can declare any Maven/Ivy/file repository here.
  mavenCentral()
}

javadoc {
  destinationDir = file("docs")
  if(JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
    options.addBooleanOption('notimestamp', true)
  }
}

test {
  useJUnitPlatform()
}

jacocoTestReport {
  reports {
    xml.required = true
    html.required = true
  }
}

check.dependsOn jacocoTestReport

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

//version = '0.14'
jar {
  archiveBaseName = 'sql-request-builder'
  archiveVersion = '0.14'
  manifest {
    attributes("Manifest-Version": "1.0",
               "Name": "com/github/vlachenal/sql/",
               "Creadted-By": System.getProperty('java.version') + " (" + System.getProperty('java.vendor') + ")",
               "Application-Name": "SQL request builder",
               "Specification-Title": "SQL request builder",
               "Specification-Version": archiveVersion,
               "Specification-Vendor": "Vincent Lachenal",
               "Implementation-Title": "com.github.vlachenal.sql",
               "Implementation-Version": archiveVersion,
               "Implementation-Vendor": "Vincent Lachenal",
               'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
               "Source-Compatibility": sourceCompatibility,
               "Target-Compatibility": targetCompatibility)
  }
}

// Publish to Maven +
group = 'com.github.vlachenal'

task sourcesJar(type: Jar) {
  archiveClassifier = 'sources'
  from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
  archiveClassifier = 'javadoc'
  from javadoc.destinationDir
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'sql-request-builder'
      version = '0.14'
      from components.java
      artifact sourcesJar
      artifact javadocJar

      pom {
        name = 'sql-request-builder'
        description = 'Dynamic SQL request builder'
        url = 'https://github.com/vlachenal/sql-request-builder'
        licenses {
          license {
            name = 'GNU Lesser General Public License, Version 3.0'
            url = 'https://www.gnu.org/copyleft/lesser.html'
          }
        }
        developers {
          developer {
            id = 'vlachenal'
            name = 'Vincent Lachenal'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/vlachenal/sql-request-builder.git'
          developerConnection = 'scm:git:ssh://github.com:vlachenal/sql-request-builder.git'
          url = 'https://github.com/vlachenal/sql-request-builder'
        }
      }
    }
  }

  repositories {
    maven {
      name = 'central'
      def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
      def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username = project.hasProperty("ossrhUsername") ? "${ossrhUsername}" : null
        password = project.hasProperty("ossrhPassword") ? "${ossrhPassword}" : null
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}
// Publish to Maven -
